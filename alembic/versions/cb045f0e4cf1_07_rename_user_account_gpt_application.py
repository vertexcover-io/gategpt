"""07_rename_user_account_gpt_application

Revision ID: cb045f0e4cf1
Revises: 6c8aa336cfa9
Create Date: 2023-12-22 10:23:03.151292

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision: str = "cb045f0e4cf1"
down_revision: Union[str, None] = "6c8aa336cfa9"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    #
    op.rename_table("user_account", "custom_gpt_application")
    op.create_table(
        "user_session",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("gpt_application_id", sa.Integer(), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("name", sa.Text(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["gpt_application_id"],
            ["custom_gpt_application.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_user_session_email"), "user_session", ["email"], unique=False
    )
    op.add_column(
        "email_verification_request",
        sa.Column("gpt_application_id", sa.Integer(), nullable=False),
    )
    op.drop_constraint(
        "verification_request_user_id_fkey",
        "email_verification_request",
        type_="foreignkey",
    )
    op.create_foreign_key(
        None,
        "email_verification_request",
        "custom_gpt_application",
        ["gpt_application_id"],
        ["id"],
    )
    op.drop_column("email_verification_request", "user_id")
    op.add_column(
        "oauth_token", sa.Column("gpt_application_id", sa.Integer(), nullable=False)
    )
    op.drop_constraint(
        "oauth_token_user_account_id_fkey", "oauth_token", type_="foreignkey"
    )
    op.create_foreign_key(
        None, "oauth_token", "custom_gpt_application", ["gpt_application_id"], ["id"]
    )
    op.drop_column("oauth_token", "user_account_id")
    op.add_column(
        "oauth_verification_request",
        sa.Column("gpt_application_id", sa.Integer(), nullable=False),
    )
    op.drop_constraint(
        "oauth_verification_request_user_id_fkey",
        "oauth_verification_request",
        type_="foreignkey",
    )
    op.create_foreign_key(
        None,
        "oauth_verification_request",
        "custom_gpt_application",
        ["gpt_application_id"],
        ["id"],
    )
    op.drop_column("oauth_verification_request", "user_id")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "oauth_verification_request",
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "oauth_verification_request", type_="foreignkey")
    op.create_foreign_key(
        "oauth_verification_request_user_id_fkey",
        "oauth_verification_request",
        "user_account",
        ["user_id"],
        ["id"],
    )
    op.drop_column("oauth_verification_request", "gpt_application_id")
    op.add_column(
        "oauth_token",
        sa.Column("user_account_id", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "oauth_token", type_="foreignkey")
    op.create_foreign_key(
        "oauth_token_user_account_id_fkey",
        "oauth_token",
        "user_account",
        ["user_account_id"],
        ["id"],
    )
    op.drop_column("oauth_token", "gpt_application_id")
    op.add_column(
        "email_verification_request",
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "email_verification_request", type_="foreignkey")
    op.create_foreign_key(
        "verification_request_user_id_fkey",
        "email_verification_request",
        "user_account",
        ["user_id"],
        ["id"],
    )
    op.drop_column("email_verification_request", "gpt_application_id")
    op.rename_table("custom_gpt_application", "user_account")
    op.drop_index(op.f("ix_user_session_email"), table_name="user_session")
    op.drop_table("user_session")
    # ### end Alembic commands ###
